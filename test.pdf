function priority(char)
	if char is ‘+’ or char is ‘-‘ do
		return 1
	else if char is ‘*’ or char is ‘+’
		return 2
return 0

function infixToPrefix(infixString)
	operatorList <- {*,/,+,-}
	operandList <- {0,1,2,3,4,5,6,7,8,9}
	operatorStack <- createStack()
	operandStack <- createStack()
	for each char in infixString do
		if char is ‘(‘ do
			operatorStack.push(char);
		else if char is ‘)’ do
			while operatorStack is not empty and operatorStack.top() is not ‘(’ do
				operand1 <- operands.top()
				operandStack.pop()

				operand2 <- operands.top()
				operandStack.pop()

				operator <- operatorStack.top()
				operatorStack.pop()
				
				tmp = operator + operand2 + operand1
        				operands.push(tmp)
		
			operators.pop()
		else if char is in operandsList do
			operandStack.push(char)
		else do
while operatorStack is not empty and priority(char) <<-      priority(operatorStack.top()) do
				operand1 <- operandStack.top()
				operands.pop()
                		operand2 <- operandStack.top()
				operands.pop()
				operator <- operator.top()
				operatorStack.pop()

				tmp = operator + operand2 + operand1
        				operands.push(tmp)



	while operatorStack is not empty do
		operand1 <- operandStack.top()
		operandStack.pop()

		operand2 <- operandStack.top()
		operandStack.pop()
		
		operator <- operatorStack.top()
		operatorStack.pop()

		tmp = operator + operand2 + operand1
        		operands.push(tmp)

	return operandStack.top()

	



		
	


 
